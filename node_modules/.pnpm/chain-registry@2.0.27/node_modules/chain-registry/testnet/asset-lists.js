"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
const _agoricdevnet = __importStar(require("./agoricdevnet"));
const _airchainstestnet = __importStar(require("./airchainstestnet"));
const _airchainsvaranasitestnet = __importStar(require("./airchainsvaranasitestnet"));
const _akashtestnet = __importStar(require("./akashtestnet"));
const _alloratestnet = __importStar(require("./alloratestnet"));
const _archwaytestnet = __importStar(require("./archwaytestnet"));
const _arkeonetworktestnet = __importStar(require("./arkeonetworktestnet"));
const _artelatestnet = __importStar(require("./artelatestnet"));
const _atomonetestnet = __importStar(require("./atomonetestnet"));
const _auratestnet = __importStar(require("./auratestnet"));
const _autheotestnet = __importStar(require("./autheotestnet"));
const _axelartestnet = __importStar(require("./axelartestnet"));
const _babylontestnet = __importStar(require("./babylontestnet"));
const _bfhevmtestnet = __importStar(require("./bfhevmtestnet"));
const _bitcannadevnet = __importStar(require("./bitcannadevnet"));
const _blockxtestnet = __importStar(require("./blockxtestnet"));
const _cascadiatestnet = __importStar(require("./cascadiatestnet"));
const _celestiatestnet3 = __importStar(require("./celestiatestnet3"));
const _chain4energytestnet = __importStar(require("./chain4energytestnet"));
const _cheqdtestnet = __importStar(require("./cheqdtestnet"));
const _chimbatestnet = __importStar(require("./chimbatestnet"));
const _composabletestnet = __importStar(require("./composabletestnet"));
const _coolcattestnet = __importStar(require("./coolcattestnet"));
const _coreumtestnet = __importStar(require("./coreumtestnet"));
const _cosmoshubtestnet = __importStar(require("./cosmoshubtestnet"));
const _cosmosicsprovidertestnet = __importStar(require("./cosmosicsprovidertestnet"));
const _cosmwasmtestnet = __importStar(require("./cosmwasmtestnet"));
const _cosstestnet = __importStar(require("./cosstestnet"));
const _cudostestnet = __importStar(require("./cudostestnet"));
const _deardogetestnet = __importStar(require("./deardogetestnet"));
const _desmostestnet = __importStar(require("./desmostestnet"));
const _dhealthtestnet = __importStar(require("./dhealthtestnet"));
const _doravotatestnet = __importStar(require("./doravotatestnet"));
const _dydxtestnet = __importStar(require("./dydxtestnet"));
const _dymensiontestnet1 = __importStar(require("./dymensiontestnet1"));
const _elystestnet = __importStar(require("./elystestnet"));
const _empetestnet = __importStar(require("./empetestnet"));
const _empowertestnet = __importStar(require("./empowertestnet"));
const _epixtestnet = __importStar(require("./epixtestnet"));
const _evmostestnet = __importStar(require("./evmostestnet"));
const _fetchhubtestnet = __importStar(require("./fetchhubtestnet"));
const _fiammatestnet = __importStar(require("./fiammatestnet"));
const _finschiatestnet = __importStar(require("./finschiatestnet"));
const _galacticatestnet = __importStar(require("./galacticatestnet"));
const _gitopiatestnet = __importStar(require("./gitopiatestnet"));
const _hedgetestnet = __importStar(require("./hedgetestnet"));
const _hippoprotocoltestnet = __importStar(require("./hippoprotocoltestnet"));
const _humanstestnet = __importStar(require("./humanstestnet"));
const _hypersigntestnet = __importStar(require("./hypersigntestnet"));
const _impacthubtestnet = __importStar(require("./impacthubtestnet"));
const _imversedtestnet = __importStar(require("./imversedtestnet"));
const _injectivetestnet = __importStar(require("./injectivetestnet"));
const _int3facetestnet = __importStar(require("./int3facetestnet"));
const _intentotestnet = __importStar(require("./intentotestnet"));
const _iopntestnet = __importStar(require("./iopntestnet"));
const _jackaltestnet = __importStar(require("./jackaltestnet"));
const _jackaltestnet2 = __importStar(require("./jackaltestnet2"));
const _junotestnet = __importStar(require("./junotestnet"));
const _kichaintestnet = __importStar(require("./kichaintestnet"));
const _kimanetworktestnet = __importStar(require("./kimanetworktestnet"));
const _kujiratestnet = __importStar(require("./kujiratestnet"));
const _kyvetestnet = __importStar(require("./kyvetestnet"));
const _lavatestnet = __importStar(require("./lavatestnet"));
const _likecointestnet = __importStar(require("./likecointestnet"));
const _lombardledgertestnet = __importStar(require("./lombardledgertestnet"));
const _lumenxtestnet = __importStar(require("./lumenxtestnet"));
const _lumeratestnet = __importStar(require("./lumeratestnet"));
const _manifesttestnet = __importStar(require("./manifesttestnet"));
const _mantrachaintestnet = __importStar(require("./mantrachaintestnet"));
const _mantrachaintestnet2 = __importStar(require("./mantrachaintestnet2"));
const _marstestnet = __importStar(require("./marstestnet"));
const _metanovaversetestnet = __importStar(require("./metanovaversetestnet"));
const _migalootestnet = __importStar(require("./migalootestnet"));
const _neuratestnet = __importStar(require("./neuratestnet"));
const _neutrontestnet = __importStar(require("./neutrontestnet"));
const _nibirutestnet = __importStar(require("./nibirutestnet"));
const _nibirutestnet2 = __importStar(require("./nibirutestnet2"));
const _nibirutestnet3 = __importStar(require("./nibirutestnet3"));
const _nilliontestnet = __importStar(require("./nilliontestnet"));
const _nobletestnet = __importStar(require("./nobletestnet"));
const _noistestnet = __importStar(require("./noistestnet"));
const _nolustestnet = __importStar(require("./nolustestnet"));
const _nomictestnet = __importStar(require("./nomictestnet"));
const _nyxtestnet = __importStar(require("./nyxtestnet"));
const _okp4testnet = __importStar(require("./okp4testnet"));
const _osmosistestnet = __importStar(require("./osmosistestnet"));
const _pelltestnet = __importStar(require("./pelltestnet"));
const _permtestnet = __importStar(require("./permtestnet"));
const _persistencetestnet = __importStar(require("./persistencetestnet"));
const _persistencetestnet2 = __importStar(require("./persistencetestnet2"));
const _planqtestnet = __importStar(require("./planqtestnet"));
const _pockettestnet = __importStar(require("./pockettestnet"));
const _pryzmtestnet = __importStar(require("./pryzmtestnet"));
const _quasartestnet = __importStar(require("./quasartestnet"));
const _qubeticstestnet = __importStar(require("./qubeticstestnet"));
const _quicksilvertestnet = __importStar(require("./quicksilvertestnet"));
const _qwoyntestnet = __importStar(require("./qwoyntestnet"));
const _safrochaintestnet = __importStar(require("./safrochaintestnet"));
const _sagatestnet = __importStar(require("./sagatestnet"));
const _secretnetworktestnet = __importStar(require("./secretnetworktestnet"));
const _sedatestnet = __importStar(require("./sedatestnet"));
const _seitestnet = __importStar(require("./seitestnet"));
const _seitestnet2 = __importStar(require("./seitestnet2"));
const _selfchaindevnet = __importStar(require("./selfchaindevnet"));
const _sgetestnet = __importStar(require("./sgetestnet"));
const _sgetestnet4 = __importStar(require("./sgetestnet4"));
const _shentutestnet = __importStar(require("./shentutestnet"));
const _sixtestnet = __importStar(require("./sixtestnet"));
const _soarchaintestnet = __importStar(require("./soarchaintestnet"));
const _sourcetestnet = __importStar(require("./sourcetestnet"));
const _stargazetestnet = __importStar(require("./stargazetestnet"));
const _statesettestnet = __importStar(require("./statesettestnet"));
const _stridetestnet = __importStar(require("./stridetestnet"));
const _sunrisetestnet = __importStar(require("./sunrisetestnet"));
const _swisstroniktestnet = __importStar(require("./swisstroniktestnet"));
const _symphonytestnet = __importStar(require("./symphonytestnet"));
const _synternettestnet = __importStar(require("./synternettestnet"));
const _terpnettestnet = __importStar(require("./terpnettestnet"));
const _terpnettestnet2 = __importStar(require("./terpnettestnet2"));
const _terra2testnet = __importStar(require("./terra2testnet"));
const _titannettestnet = __importStar(require("./titannettestnet"));
const _titantestnet = __importStar(require("./titantestnet"));
const _tucanatestnet = __importStar(require("./tucanatestnet"));
const _ulastestnet = __importStar(require("./ulastestnet"));
const _unificationtestnet = __importStar(require("./unificationtestnet"));
const _uniontestnet = __importStar(require("./uniontestnet"));
const _upticktestnet = __importStar(require("./upticktestnet"));
const _wardenprotocoltestnet = __importStar(require("./wardenprotocoltestnet"));
const _wavehashtestnet = __importStar(require("./wavehashtestnet"));
const _xarchaintestnet = __importStar(require("./xarchaintestnet"));
const _xiontestnet2 = __importStar(require("./xiontestnet2"));
const _xplatestnet = __importStar(require("./xplatestnet"));
const _xrplevmtestnet = __importStar(require("./xrplevmtestnet"));
const _zenrocktestnet = __importStar(require("./zenrocktestnet"));
const _zetachaintestnet = __importStar(require("./zetachaintestnet"));
const _zigchaintestnet = __importStar(require("./zigchaintestnet"));
const assetList = [
    _agoricdevnet.assetList,
    _airchainstestnet.assetList,
    _airchainsvaranasitestnet.assetList,
    _akashtestnet.assetList,
    _alloratestnet.assetList,
    _archwaytestnet.assetList,
    _arkeonetworktestnet.assetList,
    _artelatestnet.assetList,
    _atomonetestnet.assetList,
    _auratestnet.assetList,
    _autheotestnet.assetList,
    _axelartestnet.assetList,
    _babylontestnet.assetList,
    _bfhevmtestnet.assetList,
    _bitcannadevnet.assetList,
    _blockxtestnet.assetList,
    _cascadiatestnet.assetList,
    _celestiatestnet3.assetList,
    _chain4energytestnet.assetList,
    _cheqdtestnet.assetList,
    _chimbatestnet.assetList,
    _composabletestnet.assetList,
    _coolcattestnet.assetList,
    _coreumtestnet.assetList,
    _cosmoshubtestnet.assetList,
    _cosmosicsprovidertestnet.assetList,
    _cosmwasmtestnet.assetList,
    _cosstestnet.assetList,
    _cudostestnet.assetList,
    _deardogetestnet.assetList,
    _desmostestnet.assetList,
    _dhealthtestnet.assetList,
    _doravotatestnet.assetList,
    _dydxtestnet.assetList,
    _dymensiontestnet1.assetList,
    _elystestnet.assetList,
    _empetestnet.assetList,
    _empowertestnet.assetList,
    _epixtestnet.assetList,
    _evmostestnet.assetList,
    _fetchhubtestnet.assetList,
    _fiammatestnet.assetList,
    _finschiatestnet.assetList,
    _galacticatestnet.assetList,
    _gitopiatestnet.assetList,
    _hedgetestnet.assetList,
    _hippoprotocoltestnet.assetList,
    _humanstestnet.assetList,
    _hypersigntestnet.assetList,
    _impacthubtestnet.assetList,
    _imversedtestnet.assetList,
    _injectivetestnet.assetList,
    _int3facetestnet.assetList,
    _intentotestnet.assetList,
    _iopntestnet.assetList,
    _jackaltestnet.assetList,
    _jackaltestnet2.assetList,
    _junotestnet.assetList,
    _kichaintestnet.assetList,
    _kimanetworktestnet.assetList,
    _kujiratestnet.assetList,
    _kyvetestnet.assetList,
    _lavatestnet.assetList,
    _likecointestnet.assetList,
    _lombardledgertestnet.assetList,
    _lumenxtestnet.assetList,
    _lumeratestnet.assetList,
    _manifesttestnet.assetList,
    _mantrachaintestnet.assetList,
    _mantrachaintestnet2.assetList,
    _marstestnet.assetList,
    _metanovaversetestnet.assetList,
    _migalootestnet.assetList,
    _neuratestnet.assetList,
    _neutrontestnet.assetList,
    _nibirutestnet.assetList,
    _nibirutestnet2.assetList,
    _nibirutestnet3.assetList,
    _nilliontestnet.assetList,
    _nobletestnet.assetList,
    _noistestnet.assetList,
    _nolustestnet.assetList,
    _nomictestnet.assetList,
    _nyxtestnet.assetList,
    _okp4testnet.assetList,
    _osmosistestnet.assetList,
    _pelltestnet.assetList,
    _permtestnet.assetList,
    _persistencetestnet.assetList,
    _persistencetestnet2.assetList,
    _planqtestnet.assetList,
    _pockettestnet.assetList,
    _pryzmtestnet.assetList,
    _quasartestnet.assetList,
    _qubeticstestnet.assetList,
    _quicksilvertestnet.assetList,
    _qwoyntestnet.assetList,
    _safrochaintestnet.assetList,
    _sagatestnet.assetList,
    _secretnetworktestnet.assetList,
    _sedatestnet.assetList,
    _seitestnet.assetList,
    _seitestnet2.assetList,
    _selfchaindevnet.assetList,
    _sgetestnet.assetList,
    _sgetestnet4.assetList,
    _shentutestnet.assetList,
    _sixtestnet.assetList,
    _soarchaintestnet.assetList,
    _sourcetestnet.assetList,
    _stargazetestnet.assetList,
    _statesettestnet.assetList,
    _stridetestnet.assetList,
    _sunrisetestnet.assetList,
    _swisstroniktestnet.assetList,
    _symphonytestnet.assetList,
    _synternettestnet.assetList,
    _terpnettestnet.assetList,
    _terpnettestnet2.assetList,
    _terra2testnet.assetList,
    _titannettestnet.assetList,
    _titantestnet.assetList,
    _tucanatestnet.assetList,
    _ulastestnet.assetList,
    _unificationtestnet.assetList,
    _uniontestnet.assetList,
    _upticktestnet.assetList,
    _wardenprotocoltestnet.assetList,
    _wavehashtestnet.assetList,
    _xarchaintestnet.assetList,
    _xiontestnet2.assetList,
    _xplatestnet.assetList,
    _xrplevmtestnet.assetList,
    _zenrocktestnet.assetList,
    _zetachaintestnet.assetList,
    _zigchaintestnet.assetList
];
exports.default = assetList;
